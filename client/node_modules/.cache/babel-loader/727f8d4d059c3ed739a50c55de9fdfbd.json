{"ast":null,"code":"import axios from 'axios';\nexport const ServicePosts = ({\n  dispatch,\n  getState\n}) => next => action => {\n  if (action.type === \"CREATE_POSTS\") {\n    return new Promise((resolve, reject) => {\n      console.log(\"im at createpost middelware\");\n      axios.post(\"http://localhost:9000/addUser\", action.payload).then(res => {\n        console.log(\"res\");\n        console.log(res);\n        let user = { ...res.data.user\n        };\n        action.payload = user;\n\n        if (user._id != null) {\n          resolve(true);\n          return next(action);\n        } else reject(false);\n      }).catch(err => {\n        resolve(false);\n      });\n    });\n  } else if (action.type === \"GET_POSTS\") {\n    return new Promise((resolve, reject) => {\n      console.log(\"im at getepost middelware\");\n      debugger;\n      const name = \"photograph\";\n      action.payload = {\n        name\n      };\n      axios.get(\"http://localhost:3007/getPosts/60acc85ee6a0124fd4202cd7\").then(res => {\n        console.log(\"res\");\n        console.log(res);\n        let posts = [...res.data.post];\n        action.payload = posts;\n\n        if (posts != null) {\n          resolve(true);\n          return next(action);\n        } else reject(false);\n      }).catch(err => {\n        resolve(false);\n      });\n    });\n  }\n\n  next(action);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/magazin/magazingood/client/src/redux/middleWare/servicePosts.js"],"names":["axios","ServicePosts","dispatch","getState","next","action","type","Promise","resolve","reject","console","log","post","payload","then","res","user","data","_id","catch","err","name","get","posts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4BC,IAAI,IAAIC,MAAM,IAAI;AAEtE,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAChC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAX,MAAAA,KAAK,CAACY,IAAN,CAAW,+BAAX,EAA4CP,MAAM,CAACQ,OAAnD,EACKC,IADL,CACWC,GAAD,IAAS;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,YAAIC,IAAI,GAAG,EAAE,GAAGD,GAAG,CAACE,IAAJ,CAASD;AAAd,SAAX;AACAX,QAAAA,MAAM,CAACQ,OAAP,GAAiBG,IAAjB;;AACA,YAAIA,IAAI,CAACE,GAAL,IAAY,IAAhB,EAAsB;AAClBV,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA,iBAAOJ,IAAI,CAACC,MAAD,CAAX;AACH,SAHD,MAKII,MAAM,CAAC,KAAD,CAAN;AACP,OAZL,EAaMU,KAbN,CAaYC,GAAG,IAAI;AACXZ,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAfL;AAgBH,KAlBM,CAAP;AAmBH,GApBD,MAuBA,IAAIH,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACA,YAAMU,IAAI,GAAG,YAAb;AACAhB,MAAAA,MAAM,CAACQ,OAAP,GAAiB;AAACQ,QAAAA;AAAD,OAAjB;AACArB,MAAAA,KAAK,CAACsB,GAAN,CAAU,yDAAV,EACKR,IADL,CACWC,GAAD,IAAS;AACXL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,YAAIQ,KAAK,GAAG,CAAE,GAAGR,GAAG,CAACE,IAAJ,CAASL,IAAd,CAAZ;AACAP,QAAAA,MAAM,CAACQ,OAAP,GAAiBU,KAAjB;;AACA,YAAIA,KAAK,IAAG,IAAZ,EAAkB;AACdf,UAAAA,OAAO,CAAC,IAAD,CAAP;AACA,iBAAOJ,IAAI,CAACC,MAAD,CAAX;AACH,SAHD,MAKII,MAAM,CAAC,KAAD,CAAN;AACP,OAZL,EAaMU,KAbN,CAaYC,GAAG,IAAI;AACXZ,QAAAA,OAAO,CAAC,KAAD,CAAP;AACH,OAfL;AAgBH,KArBM,CAAP;AAsBH;;AACDJ,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACH,CAlDM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const ServicePosts = ({ dispatch, getState }) => next => action => {\r\n\r\n    if (action.type === \"CREATE_POSTS\") {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"im at createpost middelware\")\r\n            axios.post(\"http://localhost:9000/addUser\", action.payload)\r\n                .then((res) => {\r\n                    console.log(\"res\")\r\n                    console.log(res)\r\n                    let user = { ...res.data.user }\r\n                    action.payload = user\r\n                    if (user._id != null) {\r\n                        resolve(true)\r\n                        return next(action)\r\n                    }\r\n                    else\r\n                        reject(false)\r\n                }\r\n                ).catch(err => {\r\n                    resolve(false)\r\n                })\r\n        })\r\n    }\r\n else\r\n\r\n    if (action.type === \"GET_POSTS\") {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"im at getepost middelware\")\r\n            debugger\r\n            const name = \"photograph\";\r\n            action.payload = {name}\r\n            axios.get(\"http://localhost:3007/getPosts/60acc85ee6a0124fd4202cd7\")\r\n                .then((res) => {\r\n                    console.log(\"res\")\r\n                    console.log(res)\r\n                    let posts = [ ...res.data.post ]\r\n                    action.payload = posts\r\n                    if (posts!= null) {\r\n                        resolve(true)\r\n                        return next(action)\r\n                    }\r\n                    else\r\n                        reject(false)\r\n                }\r\n                ).catch(err => {\r\n                    resolve(false)\r\n                })\r\n        })\r\n    }\r\n    next(action)\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}